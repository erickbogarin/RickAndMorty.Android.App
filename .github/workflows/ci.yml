name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [30]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Check Gradle checksum
      run: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ZacSweers/check-gradle-checksums/master/check-gradle-checksums.sh)"
    
    - name: Install Android SDK
      uses: malinskiy/action-android/install-sdk@release/0.0.3

    - name: Cache Gradle Wrapper
      uses: actions/cache@v4
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-plugin/*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Make Gradle Executable
      run: chmod +x gradlew

    - name: Check Code Formatting
      run: ./gradlew spotlessCheck

    - name: Run Static Analysis
      run: ./gradlew detekt

    - name: Install Dependencies
      run: ./gradlew dependencies

    - name: Run Lint
      run: ./gradlew lint

    - name: Run Unit Tests with Coverage
      run: ./gradlew testDebugUnitTest jacocoTestReport

    - name: Generate Test Coverage Report
      run: ./gradlew jacocoTestReport

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: app/build/reports/jacoco/jacocoTestReport/html
    
    - name: Run Instrumentation Tests
      uses: malinskiy/action-android/emulator-run-cmd@release/0.0.3
      with:
        cmd: ./gradlew connectedCheck --stacktrace
        api: 23
        tag: default
        abi: x86

    - name: Build APK
      run: ./gradlew assembleDebug

    - name: Verify APK Exists
      run: ls app/build/outputs/apk/debug/

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug.apk
        path: app/build/outputs/apk/debug/app-debug.apk