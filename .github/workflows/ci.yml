name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
  
    - name: Cache Gradle Wrapper
      uses: actions/cache@v4
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-plugin/*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Make Gradle Executable
      run: chmod +x gradlew

    - name: Check Code Formatting
      run: ./gradlew spotlessCheck

    - name: Run Static Analysis
      run: ./gradlew detekt

    - name: Install Dependencies
      run: ./gradlew dependencies

    - name: Run Lint
      run: ./gradlew lint

    - name: Run Unit Tests with Coverage
      run: ./gradlew testDebugUnitTest jacocoTestReport

    - name: Generate Test Coverage Report
      run: ./gradlew jacocoTestReport

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: app/build/reports/jacoco/jacocoTestReport/html

    - name: Set up Android SDK
      id: setup_android
      uses: android-actions/setup-android@v3
      with:
        sdk-version: '33'
        ndk-version: 'latest'

    - name: Create and Start Emulator
      run: |
        echo "no" | avdmanager create avd -n test-avd -k "system-images;android-33;google_apis_playstore;x86_64" --force
        emulator -avd test-avd -no-window -gpu swiftshader_indirect -no-audio -no-boot-anim &
        adb wait-for-device shell 'pm list packages' # Espera o emulador iniciar

    - name: Run Instrumented Tests
      run: |
        chmod +x gradlew
        ./gradlew connectedAndroidTest

    - name: Build APK
      run: ./gradlew assembleDebug

    - name: Verify APK Exists
      run: ls app/build/outputs/apk/debug/

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug.apk
        path: app/build/outputs/apk/debug/app-debug.apk